name: Run Sitespeed Test & Publish Report

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  run-sitespeed:
    runs-on: influxdb
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Generate Run ID (human-readable date)
        run: |
          echo "RUN_ID=$(date +%Y-%m-%d_%H-%M-%S)" >> $GITHUB_ENV
          echo "TIMESTAMP=$(date +%s)" >> $GITHUB_ENV

      - name: Setup InfluxDB plugin
        run: |
          mkdir -p plugins
          git clone https://github.com/sitespeedio/plugin-influxdb.git plugins/influxdb
          cd plugins/influxdb && npm install && cd ../..
          echo "--- Plugin directory contents ---"
          find plugins -ls 
          echo "--- End plugin directory contents ---"

      - name: Run Sitespeed.io Test
        shell: bash 
        run: |
          set -eo pipefail 
          set -x 
          mkdir -p sitespeed-result 
          docker run --rm \
            --shm-size=2g \
            -v "$(pwd)/sitespeed-result:/sitespeed.io" \
            -v "$(pwd)/plugins:/plugins" \
            sitespeedio/sitespeed.io:latest \
            https://vegastack.com \
            --outputFolder /sitespeed.io/${{ env.RUN_ID }} \
            --plugins.add /plugins/influxdb \
            --influxdb.host localhost \
            --influxdb.version 2 \
            --influxdb.organisation vega \
            --influxdb.token '${{ secrets.INFLUXDB_TOKEN }}' \
            --influxdb.bucket sitespeed \
            --browsertime.chrome.args="no-sandbox" \
            --browsertime.chrome.args="disable-dev-shm-usage" \
            --browsertime.firefox.preference security.sandbox.content.level=0

      - name: Chown Sitespeed Results
        shell: bash
        run: |
          set -x
          echo "Changing ownership of sitespeed-result directory..."
          if [ -d "./sitespeed-result" ]; then
            sudo chown -R $(id -u):$(id -g) ./sitespeed-result
            echo "Ownership changed for ./sitespeed-result"
            ls -ld ./sitespeed-result 
            ls -l ./sitespeed-result 
          else
            echo "Directory ./sitespeed-result does not exist. Skipping chown."
          fi

      - name: Update report-mapping.json (append & sort desc)
        shell: bash 
        run: |
          set -eo pipefail 
          set -x 
          MAPPING_FILE="sitespeed-result/report-mapping.json"
          REPORT_URL="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/${{ env.RUN_ID }}/index.html"
          
          if [ ! -d "sitespeed-result/${{ env.RUN_ID }}" ]; then
            echo "Sitespeed output directory sitespeed-result/${{ env.RUN_ID }} not found. Creating report-mapping.json in sitespeed-result."
          fi

          if [ ! -f "$MAPPING_FILE" ] || ! jq empty "$MAPPING_FILE" 2>/dev/null; then
            echo "Initializing $MAPPING_FILE with an empty array."
            echo "[]" > "$MAPPING_FILE"
          fi
          
          if [ ! -w "$MAPPING_FILE" ]; then
            echo "Error: $MAPPING_FILE is not writable. Checking permissions:"
            ls -l "$MAPPING_FILE"
            ls -ld "sitespeed-result"
            exit 1
          fi

          jq --arg id "${{ env.RUN_ID }}" \
             --arg url "$REPORT_URL" \
             --argjson ts_num "$(date +%s)" \
             '. += [{"run_id": $id, "timestamp": $ts_num, "report_url": $url}] | sort_by(.timestamp) | reverse' \
             "$MAPPING_FILE" > tmp.json && mv tmp.json "$MAPPING_FILE"
          echo "--- report-mapping.json contents ---"
          cat "$MAPPING_FILE"
          echo "--- End report-mapping.json contents ---"

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.PERSONAL_GITHUB_TOKEN }} 
          publish_dir: ./sitespeed-result
          publish_branch: gh-pages

